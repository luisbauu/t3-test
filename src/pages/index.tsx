import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

<<<<<<< HEAD
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingSpinner } from "~/components/Loading";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-5">
      <Image
        className="h-12 w-12 rounded-full"
        src={user.profileImageUrl}
        alt="Profile Image"
        width={48}
        height={48}
      />
      <input
        className="grow bg-transparent placeholder-white outline-none"
        placeholder="Type 4 Letters only here!"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex flex-row gap-5 border-b p-4">
      {author?.profileImageUrl && (
        <Image
          className="h-12 w-12 rounded-full"
          src={author.profileImageUrl}
          alt="Profile Image"
          width={48}
          height={48}
        />
      )}
      <div className="flex flex-col self-center">
        <span className="text-sm">
          {author.username
            ? `@${author.username}`
            : author.firstName + " " + author.lastName}
          <span className="px-1">Â·</span>
          <span className="text-xs">{dayjs(post.createdAt).fromNow()}</span>
        </span>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
};
=======
import { api } from "~/utils/api";
>>>>>>> parent of b7413cf (added styles and things look better)

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingSpinner size={100} />;
  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
<<<<<<< HEAD
  const { user, isLoaded: userLoaded, isSignedIn } = useUser();

  //start fetching early for cache
  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />;
=======
  const user = useUser();
>>>>>>> parent of b7413cf (added styles and things look better)

  const { data } = api.posts.getAll.useQuery();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
<<<<<<< HEAD
      <main className="flex h-screen justify-center">
        <div className=" h-full w-full border-x bg-blue-400 md:max-w-xl">
          <div className="flex border-b p-4">
            {isSignedIn && <CreatePostWizard />}
            {!isSignedIn && <SignInButton />}
=======
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <p className="text-white">
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && <SignOutButton />}
          </p>

          <div>
            {data?.map((post) => (
              <div key={post.id}>{post.content}</div>
            ))}
>>>>>>> parent of b7413cf (added styles and things look better)
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
